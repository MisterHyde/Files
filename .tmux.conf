set-option -g prefix c-d

# color options
set-option -g default-terminal screen-256color

# vi modus
set-option -g status-keys vi
set-option -g mode-keys vi
bind-key : command-prompt
bind-key h select-pane -l
bind-key c-h select-pane -l
bind-key j select-pane -d
bind-key c-j select-pane -d
bind-key k select-pane -u
bind-key c-k select-pane -u
bind-key l select-pane -r
bind-key c-l select-pane -r
#bind-key 1 select-window 1
#bind-key 2 select-window 2
#bind-key 3 select-window 3
#bind-key 4 select-window 4
#bind-key 5 select-window 5
#bind-key 6 select-window 6
#bind-key 7 select-window 7
#bind-key 8 select-window 8
#bind-key 9 select-window 9
#bind-key 0 select-window 10

# s8ayferinsax6emvdtnv

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind | split-window -h # horizontal columns
bind - split-window -v # vertical rows


## mouse support
#bind-key m set-option -g mouse on \; display 'mouse: on'
#bind-key m set-option -g mouse off \; display 'mouse: off'
#set-window-option -g mode-mouse on
#set-option -g mouse-select-window on
#set-option -g mouse-select-pane on
#set-option -g mouse-resize-pane on

## config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
#bind-key m command-prompt -i "move-window -t "
#bind-key c-m move-window -r
#
# using shift-keys
bind-key -n s-left previous-window
bind-key -n s-right next-window
bind-key -n s-up command-prompt -i "rename-window "
bind-key -n s-down new-window
bind-key -n c-s-left swap-window -t -1
bind-key -n c-s-right swap-window -t +1
#
## history
set-option -g history-limit 10000
#
## start counting with one
set-option -g base-index 1
set-window-option -g pane-base-index 1

##set-option -g status on
#set-option -g status-bg blue
#set-option -g status-fg white
#set-window-option -g window-status-current-bg magenta
#
## time to display pane numbers wenn hitting c-d q
#set-option -g display-panes-time 3000
#
##set-option -g status-right '%k:%m'
#
## allow the arrow key to be used immediately after changing windows
#set-option -g repeat-time 0
#
## pane borders
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg green
#set -g pane-active-border-bg yellow
## command line
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright
#
## status bar items
#set -g status-interval 2
#set -g status-left '[#s]'
##set -g status-right '#{session_id} #{window_id} #d #p/#{window_panes}  %k:%m'
#set -g status-right '%k:%m'
#set -g status-utf8 on
#set-option -g status-justify left
#
##set-option -g status-justify centre
#
## disable showing the default window list component and trim it to a more specific format.
#
#set-window-option -g window-status-current-format '#i:#w#f'
#set-window-option -g window-status-format '#i:#w#f'
#
#set-window-option -g automatic-rename off
set-option -g allow-rename off
#
#{session_id} : unique session id,
#s : session title,
#f : window flags (info about which windows is active etc.),
#{window_id} : unique window id,
#i : window index,
#w : window title,
#{window_panes} : number of active panes in current window,
#d : unique pane number,
#p : dynamic pane number,
#t : pane title
#
##for panes their unique identifier is a number prefixed with % and for windows a number prefixed with @.
##for sessions prefixed with $.
##
#
bind-key [ copy-mode
bind-key ] paste-buffer
#
## setup 'v' to begin selection as in vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
## update default binding of `enter` to also use copy-pipe
unbind -t vi-copy enter
bind-key -t vi-copy enter copy-pipe "reattach-to-user-namespace pbcopy"
#
# set window notifications
setw -g monitor-activity on
set -g visual-activity on
#
## renumber windows when a window is closed
set -g renumber-windows on

neww -n calendar vim -n calendar
new -n zsh

# show battery charge in the status bar
set -g status-right "#(/home/felix/.bin/battery discharging; /home/felix/.bin/battery charging) \"#h\" #(date)"
#set -g status-right "#(uptime|awk '{print $11}') #(date)"

# set status bar
set -g status-bg "#a8aedd"
set -g status-fg black
set -g status-left '#[fg=#4b0b23][#I]'
# highlight active window
set-window-option -g window-status-current-bg "#b6f486" 


# Rebindse on with ^B m
bind m \
	setw -g mode-mouse on \;\
    setw -g mouse-resize-pane on \;\
    setw -g mouse-select-pane on \;\
    setw -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
	setw -g mode-mouse off \;\
	setw -g mouse-resize-pane off \;\
	setw -g mouse-select-pane off \;\
	setw -g mouse-select-window off \;\
	display 'Mouse: OFF'the prefix key
